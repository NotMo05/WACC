begin
  # Sum an int array
	int sum(int[] nums) is
		int i = 0;
		int total = 0;
		while i < len nums do
			total = total + nums[i];
			i = i + 1
		done;
		return total
	end

	int product(int[] nums) is
		int i = 0;
		int total = 1;
		while i < len nums do
			total = total * nums[i];
			i = i + 1
		done;
		return total
	end

	int abs(int x) is
		if x < 0 then
			return -x
		else
			return x
		fi
	end

	int pow(int base, int exp) is
		int result = 1;
		while exp > 0 do
			result = base * result;
			exp = exp - 1
		done;
		return result
	end

  # nums must be a non empty array
	int minArray(int[] nums) is
		if len nums == 0 then
			exit -1
		else
			int i = 0;
			int min = nums[0];
			while i < len nums do
				if nums[i] < min then
					min = nums[i]
				else
					skip
				fi;
				i = i + 1
			done;
			return min
		fi
	end

  # nums must be a non empty array
	int maxArray(int[] nums) is
		if len nums == 0 then
			exit -1
		else
			int i = 0;
			int max = nums[0];
			while i < len nums do
				if nums[i] > max then
					max = nums[i]
				else
					skip
				fi;
				i = i + 1
			done;
			return max
		fi
	end
end